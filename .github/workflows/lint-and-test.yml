name: CI - Lint & Test

# ‚Üê‚Äî Define when to run the workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: üßπ Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Pythonname: CI ‚Äì Lint & Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: üßπ Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: etl    # run all commands from etl/
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('etl/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install linters
        run: |
          pip install --upgrade pip
          pip install black isort flake8 mypy

      - name: Black check
        run: black --check app/

      - name: isort check
        run: isort --check-only app/

      - name: Flake8
        run: flake8 app/

      - name: Mypy
        run: mypy app/


  test:
    name: üß™ Test
    needs: lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: etl    # same here
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('etl/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests
        run: pytest --cov=app/

      - name: Upload coverage report
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/

        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install linters
        run: |
          pip install --upgrade pip
          pip install black isort flake8 mypy

      - name: Black check
        run: black --check .

      - name: isort check
        run: isort --check-only .

      - name: Flake8
        run: flake8 .

      - name: Mypy
        run: mypy app/

  test:
    name: üß™ Test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests
        run: pytest --cov=.

      - name: Upload coverage (optional)
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/
